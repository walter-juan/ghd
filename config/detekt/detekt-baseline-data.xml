<?xml version="1.0" ?>
<SmellBaseline>
  <ManuallySuppressedIssues></ManuallySuppressedIssues>
  <CurrentIssues>
    <ID>ArgumentListWrapping:ApiToDomainMappers.kt$(lastCommitCheckRollupStatusString, CommitCheckRollupStatus.UNKNOWN)</ID>
    <ID>ArgumentListWrapping:AppProperties.kt$AppProperties$("notificationsActivityChecksFromYourPullRequestsEnabled", false)</ID>
    <ID>ArgumentListWrapping:AppProperties.kt$AppProperties$("notificationsActivityMergeableFromYourPullRequestsEnabled", false)</ID>
    <ID>ArgumentListWrapping:AppProperties.kt$AppProperties$("notificationsActivityReviewsFromYouDismissedEnabled", false)</ID>
    <ID>ArgumentListWrapping:AppProperties.kt$AppProperties$("notificationsActivityReviewsFromYourPullRequestsEnabled", false)</ID>
    <ID>ArgumentListWrapping:AppProperties.kt$AppProperties$("notificationsStateClosedFromOthersPullRequestsEnabled", false)</ID>
    <ID>ArgumentListWrapping:AppProperties.kt$AppProperties$("notificationsStateDraftFromOthersPullRequestsEnabled", false)</ID>
    <ID>ArgumentListWrapping:AppProperties.kt$AppProperties$("notificationsStateMergedFromOthersPullRequestsEnabled", false)</ID>
    <ID>ArgumentListWrapping:AppProperties.kt$AppProperties$("notificationsStateOpenFromOthersPullRequestsEnabled", false)</ID>
    <ID>ArgumentListWrapping:Converters.kt$Converters$(value, CommitCheckRollupStatus.UNKNOWN)</ID>
    <ID>ArgumentListWrapping:Converters.kt$Converters$(value, MergeGitHubStateStatus.UNKNOWN)</ID>
    <ID>ArgumentListWrapping:Converters.kt$Converters$(value, PullRequestState.UNKNOWN)</ID>
    <ID>ArgumentListWrapping:Converters.kt$Converters$(value, SyncResultEntry.Origin.UNKNOWN)</ID>
    <ID>ArgumentListWrapping:DbRepoToCheck.kt$DbRepoToCheck$(name = "are_pull_requests_notifications_enabled", defaultValue = "0")</ID>
    <ID>ArgumentListWrapping:DbRepoToCheck.kt$DbRepoToCheck$(name = "are_releases_notifications_enabled", defaultValue = "0")</ID>
    <ID>ArgumentListWrapping:LocalDataSourceImpl.kt$LocalDataSourceImpl$(syncResultId = syncResult.id)</ID>
    <ID>MaxLineLength:AppProperties.kt$AppProperties$var notificationsActivityChecksFromYourPullRequestsEnabled: Boolean by settings.boolean("notificationsActivityChecksFromYourPullRequestsEnabled", false)</ID>
    <ID>MaxLineLength:AppProperties.kt$AppProperties$var notificationsActivityMergeableFromYourPullRequestsEnabled: Boolean by settings.boolean("notificationsActivityMergeableFromYourPullRequestsEnabled", false)</ID>
    <ID>MaxLineLength:AppProperties.kt$AppProperties$var notificationsActivityReviewsFromYourPullRequestsEnabled: Boolean by settings.boolean("notificationsActivityReviewsFromYourPullRequestsEnabled", false)</ID>
    <ID>MaxLineLength:AppProperties.kt$AppProperties$var notificationsStateClosedFromOthersPullRequestsEnabled: Boolean by settings.boolean("notificationsStateClosedFromOthersPullRequestsEnabled", false)</ID>
    <ID>MaxLineLength:AppProperties.kt$AppProperties$var notificationsStateDraftFromOthersPullRequestsEnabled: Boolean by settings.boolean("notificationsStateDraftFromOthersPullRequestsEnabled", false)</ID>
    <ID>MaxLineLength:AppProperties.kt$AppProperties$var notificationsStateMergedFromOthersPullRequestsEnabled: Boolean by settings.boolean("notificationsStateMergedFromOthersPullRequestsEnabled", false)</ID>
    <ID>MaxLineLength:LocalDataSourceImpl.kt$LocalDataSourceImpl$activityEnabledOption = enumValueOfOrNull&lt;NotificationsSettings.EnabledOption&gt;(appProperties.notificationsActivityEnabledOption) ?: defaultEnabledOption</ID>
    <ID>MaxLineLength:LocalDataSourceImpl.kt$LocalDataSourceImpl$appProperties.notificationsActivityChecksFromYourPullRequestsEnabled = appSettings.notificationsSettings.activityChecksFromYourPullRequestsEnabled</ID>
    <ID>MaxLineLength:LocalDataSourceImpl.kt$LocalDataSourceImpl$appProperties.notificationsActivityMergeableFromYourPullRequestsEnabled = appSettings.notificationsSettings.activityMergeableFromYourPullRequestsEnabled</ID>
    <ID>MaxLineLength:LocalDataSourceImpl.kt$LocalDataSourceImpl$appProperties.notificationsActivityReviewsFromYouDismissedEnabled = appSettings.notificationsSettings.activityReviewsFromYouDismissedEnabled</ID>
    <ID>MaxLineLength:LocalDataSourceImpl.kt$LocalDataSourceImpl$appProperties.notificationsActivityReviewsFromYourPullRequestsEnabled = appSettings.notificationsSettings.activityReviewsFromYourPullRequestsEnabled</ID>
    <ID>MaxLineLength:LocalDataSourceImpl.kt$LocalDataSourceImpl$appProperties.notificationsStateClosedFromOthersPullRequestsEnabled = appSettings.notificationsSettings.stateClosedFromOthersPullRequestsEnabled</ID>
    <ID>MaxLineLength:LocalDataSourceImpl.kt$LocalDataSourceImpl$appProperties.notificationsStateDraftFromOthersPullRequestsEnabled = appSettings.notificationsSettings.stateDraftFromOthersPullRequestsEnabled</ID>
    <ID>MaxLineLength:LocalDataSourceImpl.kt$LocalDataSourceImpl$appProperties.notificationsStateMergedFromOthersPullRequestsEnabled = appSettings.notificationsSettings.stateMergedFromOthersPullRequestsEnabled</ID>
    <ID>MaxLineLength:LocalDataSourceImpl.kt$LocalDataSourceImpl$appProperties.notificationsStateOpenFromOthersPullRequestsEnabled = appSettings.notificationsSettings.stateOpenFromOthersPullRequestsEnabled</ID>
    <ID>MaxLineLength:LocalDataSourceImpl.kt$LocalDataSourceImpl$stateEnabledOption = enumValueOfOrNull&lt;NotificationsSettings.EnabledOption&gt;(appProperties.notificationsStateEnabledOption) ?: defaultEnabledOption</ID>
    <ID>MaximumLineLength:AppProperties.kt$AppProperties$ </ID>
    <ID>MaximumLineLength:LocalDataSourceImpl.kt$LocalDataSourceImpl$ </ID>
    <ID>NoConsecutiveBlankLines:DbReleaseWithRepo.kt$ </ID>
    <ID>NoConsecutiveBlankLines:DiData.kt$ </ID>
    <ID>NoConsecutiveBlankLines:RemoteDataSourceImpl.kt$RemoteDataSourceImpl$ </ID>
    <ID>NoWildcardImports:DiData.kt$import io.ktor.client.*</ID>
    <ID>ParameterListWrapping:Converters.kt$Converters$(value: String?)</ID>
    <ID>ParameterWrapping:DbRepoToCheck.kt$DbRepoToCheck$@ColumnInfo(name = "are_pull_requests_notifications_enabled", defaultValue = "0") val arePullRequestsNotificationsEnabled: Boolean</ID>
    <ID>ParameterWrapping:DbRepoToCheck.kt$DbRepoToCheck$@ColumnInfo(name = "are_releases_notifications_enabled", defaultValue = "0") val areReleasesNotificationsEnabled: Boolean</ID>
    <ID>TooManyFunctions:Converters.kt$Converters</ID>
    <ID>TooManyFunctions:LocalDataSourceImpl.kt$LocalDataSourceImpl : LocalDataSource</ID>
    <ID>UnusedPrivateProperty:RemoteDataSourceImpl.kt$RemoteDataSourceImpl$private val appLogger: AppLogger</ID>
    <ID>WildcardImport:DiData.kt$import io.ktor.client.*</ID>
    <ID>Wrapping:DiData.kt$DiData$RemoteDataSourceImpl( ghOwner = ghOwner, ghRepo = ghRepo, apolloClient = get(), ktorClient = get(), appLogger = get(), )</ID>
  </CurrentIssues>
</SmellBaseline>
